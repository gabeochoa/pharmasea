digraph "BaseComponent"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [shape=record,label="{BaseComponent\n||+ BaseComponent()\l+ BaseComponent()\l+ ~BaseComponent()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [shape=record,label="{CanBeGhostPlayer\n|- ghost\l|+ ~CanBeGhostPlayer()\l+ is_ghost()\l+ is_not_ghost()\l+ update()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$dc/dba/struct_can_be_ghost_player.html",tooltip=" "];
  Node1 -> Node3 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [shape=record,label="{CanBeHighlighted\n|+ is_highlighted\l|+ ~CanBeHighlighted()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d9/d05/struct_can_be_highlighted.html",tooltip=" "];
  Node1 -> Node4 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 [shape=record,label="{CanHighlightOthers\n|- furniture_reach\l|+ ~CanHighlightOthers()\l+ reach()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d9/d6b/struct_can_highlight_others.html",tooltip=" "];
  Node1 -> Node5 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node5 [shape=record,label="{CanHoldFurniture\n|- held_furniture\l|+ ~CanHoldFurniture()\l+ empty()\l+ is_holding_furniture()\l+ asT()\l+ update()\l+ furniture()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d6/dad/struct_can_hold_furniture.html",tooltip=" "];
  Node1 -> Node6 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node6 [shape=record,label="{CanHoldItem\n|- held_item\l|+ ~CanHoldItem()\l+ empty()\l+ is_holding_item()\l+ can_take_item_from()\l+ asT()\l+ update()\l+ item()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$da/d55/struct_can_hold_item.html",tooltip=" "];
  Node1 -> Node7 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node7 [shape=record,label="{CanPerformJob\n|- personal_queue\l- current_job\l|+ ~CanPerformJob()\l+ has_job()\l+ job()\l+ job_queue()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$db/dc2/struct_can_perform_job.html",tooltip=" "];
  Node1 -> Node8 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node8 [shape=record,label="{CustomHeldItemPosition\n|+ mutator\l|+ init()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$db/d9c/struct_custom_held_item_position.html",tooltip=" "];
  Node1 -> Node9 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node9 [shape=record,label="{HasName\n|+ name_length\l+ name\l|+ ~HasName()\l+ update()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$de/d7b/struct_has_name.html",tooltip=" "];
  Node1 -> Node10 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node10 [shape=record,label="{ModelRenderer\n|- info\l|+ ~ModelRenderer()\l+ has_model()\l+ model_info()\l+ model()\l+ update()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d7/d1f/struct_model_renderer.html",tooltip=" "];
  Node1 -> Node11 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node11 [shape=record,label="{SimpleColoredBoxRenderer\n|+ face_color\l+ base_color\l|+ ~SimpleColoredBoxRenderer()\l+ init()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$dd/dee/struct_simple_colored_box_renderer.html",tooltip=" "];
  Node1 -> Node12 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node12 [shape=record,label="{Transform\n|+ FrontFaceDirectionMap\l+ DirectionToFrontFaceMap\l+ raw_position\l+ prev_position\l+ position\l+ face_direction\l+ size\l|+ offsetFaceDirection()\l+ ~Transform()\l+ init()\l+ as2()\l+ raw_bounds()\l+ bounds()\l+ snap_position()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$dd/d69/struct_transform.html",tooltip=" "];
}
