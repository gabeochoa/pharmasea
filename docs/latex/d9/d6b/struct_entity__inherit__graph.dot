digraph "Entity"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [shape=record,label="{Entity\n|+ id\l+ componentSet\l+ componentArray\l+ pushed_force\l+ cleanup\l+ is_held\l|+ has()\l+ addComponent()\l+ get()\l+ add_static_components()\l+ Entity()\l+ Entity()\l+ Entity()\l+ Entity()\l+ ~Entity()\l+ announce()\l+ is_snappable()\l+ collides()\l+ update_position()\l+ raw_bounds()\l+ bounds()\l+ snap_position()\l+ rotate_facing_clockwise()\l+ tile_infront()\l+ add_to_navmesh()\l+ is_collidable()\l+ on_pickup()\l+ on_drop()\l+ render()\l+ update()\l+ tile_infront_given\l_pos()\l# Entity()\l# size()\l# render_debug_mode()\l# render_normal()\l# render_floating_name()\l# update_held_item_position()\l# get_heading()\l# turn_to_face_entity()\l# always_update()\l# planning_update()\l# in_round_update()\l# can_place_item_into()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [shape=record,label="{Furniture\n|# pct_work_complete\l|+ Furniture()\l+ Furniture()\l+ Furniture()\l+ update_held_item_position()\l+ render_normal()\l+ render_progress_bar()\l+ do_work()\l+ has_work()\l+ add_to_navmesh()\l+ can_rotate()\l+ can_be_picked_up()\l+ can_place_item_into()\l+ has_held_item()\l# Furniture()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d0/d8b/struct_furniture.html",tooltip=" "];
  Node2 -> Node3 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [shape=record,label="{ItemContainer\< Bag \>\n||+ ItemContainer()\l+ ItemContainer()\l+ can_place_item_into()\l+ in_round_update()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$dd/d8c/struct_item_container.html",tooltip=" "];
  Node3 -> Node4 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 [shape=record,label="{BagBox\n||+ BagBox()\l+ BagBox()\l+ update_model()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d9/dec/struct_bag_box.html",tooltip=" "];
  Node2 -> Node5 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node5 [shape=record,label="{ItemContainer\< PillBottle \>\n||+ ItemContainer()\l+ ItemContainer()\l+ can_place_item_into()\l+ in_round_update()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$dd/d8c/struct_item_container.html",tooltip=" "];
  Node5 -> Node6 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node6 [shape=record,label="{MedicineCabinet\n||+ MedicineCabinet()\l+ MedicineCabinet()\l+ update_model()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d3/dee/struct_medicine_cabinet.html",tooltip=" "];
  Node2 -> Node7 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node7 [shape=record,label="{CharacterSwitcher\n||+ CharacterSwitcher()\l+ CharacterSwitcher()\l+ do_work()\l+ has_work()\l+ update_held_item_position()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d6/d27/struct_character_switcher.html",tooltip=" "];
  Node2 -> Node8 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node8 [shape=record,label="{Conveyer\n|+ relative_item_pos\l+ SPEED\l+ can_take_from\l+ ITEM_START\l+ ITEM_END\l|+ Conveyer()\l+ Conveyer()\l+ Conveyer()\l+ update_model()\l+ can_take_item_from()\l+ update_held_item_position()\l+ in_round_update()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$dd/de4/struct_conveyer.html",tooltip=" "];
  Node8 -> Node9 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node9 [shape=record,label="{Grabber\n||+ Grabber()\l+ Grabber()\l+ in_round_update()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d2/d19/struct_grabber.html",tooltip=" "];
  Node2 -> Node10 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node10 [shape=record,label="{ItemContainer\< I \>\n||+ ItemContainer()\l+ ItemContainer()\l+ can_place_item_into()\l+ in_round_update()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$dd/d8c/struct_item_container.html",tooltip=" "];
  Node10 -> Node3 [dir="back",color="orange",style="solid",label=" \< Bag \>" ];
  Node10 -> Node5 [dir="back",color="orange",style="solid",label=" \< PillBottle \>" ];
  Node2 -> Node11 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node11 [shape=record,label="{Register\n|+ ppl_in_line\l+ max_queue_size\l+ next_line_position\l|+ Register()\l+ Register()\l+ update_model()\l+ position_in_line()\l+ can_move_up()\l+ leave_line()\l+ is_in_line()\l+ has_space_in_queue()\l+ get_next_queue_position()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d0/d74/struct_register.html",tooltip=" "];
  Node2 -> Node12 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node12 [shape=record,label="{Table\n||+ Table()\l+ Table()\l+ do_work()\l+ has_work()\l+ update_held_item_position()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d5/d0d/struct_table.html",tooltip=" "];
  Node2 -> Node13 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node13 [shape=record,label="{Wall\n|+ type\l|+ Wall()\l+ Wall()\l+ Wall()\l+ size()\l+ render_normal()\l+ can_rotate()\l+ can_be_picked_up()\l+ can_place_item_into()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$df/d69/struct_wall.html",tooltip=" "];
  Node1 -> Node14 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node14 [shape=record,label="{Person\n|- character_models\l- model_index\l|+ Person()\l+ Person()\l+ Person()\l+ Person()\l+ update_xaxis_position()\l+ update_zaxis_position()\l+ update_model()\l+ base_speed()\l+ size()\l+ select_next_character\l_model()\l+ handle_collision()\l+ get_face_direction()\l+ update_facing_direction()\l+ always_update()\l# Person()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d3/de1/struct_person.html",tooltip=" "];
  Node14 -> Node15 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node15 [shape=record,label="{AIPerson\n||+ AIPerson()\l+ AIPerson()\l+ AIPerson()\l+ AIPerson()\l+ AIPerson()\l+ base_speed()\l+ stagger_mult()\l+ update_xaxis_position()\l+ update_zaxis_position()\l+ get_wandering_job()\l+ get_starting_job()\l+ get_idle_job()\l+ find_new_job()\l+ in_round_update()\l+ is_snappable()\l- serialize()\l- add_static_components()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d0/d3e/struct_a_i_person.html",tooltip=" "];
  Node15 -> Node16 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node16 [shape=record,label="{Customer\n|+ bubble\l+ ailment\l|+ Customer()\l+ Customer()\l+ Customer()\l+ Customer()\l+ Customer()\l+ init()\l+ base_speed()\l+ stagger_mult()\l+ get_starting_job()\l+ in_round_update()\l+ render_normal()\l- serialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d9/d68/struct_customer.html",tooltip=" "];
  Node14 -> Node17 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node17 [shape=record,label="{BasePlayer\n||+ add_static_components()\l+ BasePlayer()\l+ BasePlayer()\l+ BasePlayer()\l+ BasePlayer()\l+ base_speed()\l+ update_xaxis_position()\l+ update_zaxis_position()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d1/d73/struct_base_player.html",tooltip=" "];
  Node17 -> Node18 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node18 [shape=record,label="{Player\n|+ state\l+ username\l+ inputs\l|+ Player()\l+ Player()\l+ Player()\l+ Player()\l+ is_collidable()\l+ update_xaxis_position()\l+ update_zaxis_position()\l+ always_update()\l+ get_position_after\l_input()\l+ rotate_furniture()\l+ work_furniture()\l+ handle_in_game_grab\l_or_drop()\l+ handle_in_planning\l_grab_or_drop()\l+ grab_or_drop()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d3/db1/struct_player.html",tooltip=" "];
  Node17 -> Node19 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node19 [shape=record,label="{RemotePlayer\n|+ client_id\l|+ RemotePlayer()\l+ RemotePlayer()\l+ RemotePlayer()\l+ RemotePlayer()\l+ update_xaxis_position()\l+ update_zaxis_position()\l+ update_remotely()\l+ is_collidable()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d8/dd0/struct_remote_player.html",tooltip=" "];
  Node14 -> Node20 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node20 [shape=record,label="{TargetCube\n||+ TargetCube()\l+ TargetCube()\l+ TargetCube()\l+ TargetCube()\l+ update_xaxis_position()\l+ update_zaxis_position()\l+ is_collidable()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d9/d4e/struct_target_cube.html",tooltip=" "];
  Node20 -> Node21 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node21 [shape=record,label="{RegisterNextQueuePosition\n||+ RegisterNextQueuePosition()\l+ RegisterNextQueuePosition()\l+ RegisterNextQueuePosition()\l+ RegisterNextQueuePosition()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$dc/dc6/struct_register_next_queue_position.html",tooltip=" "];
  Node1 -> Node22 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node22 [shape=record,label="{Spawner\n||+ Spawner()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d0/d2d/struct_spawner.html",tooltip=" "];
  Node22 -> Node23 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node23 [shape=record,label="{CustomerSpawner\n||+ CustomerSpawner()\l+ is_collidable()\l+ draw_outside_debug\l_mode()\l+ spawn()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d2/d99/struct_customer_spawner.html",tooltip=" "];
}
